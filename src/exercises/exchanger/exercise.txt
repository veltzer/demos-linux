This is a real time design pattern exercise
===========================================
You are required to implement a real time design pattern
called "Exchanger" or, by another name, "Randezvous".
The idea is that two threads can meet, waiting for one another
in other to exchange a value. Each thread brings it's own
value to the encounter, waits for the other thread to arrive
(if that thread has not yet arrived). When both arrive, they
exchange the values.

Write the exchanger as a template with one method exchange.

somewhere, a global variable:
Exchanger<int> e;

Inside each thread:

	int value_for_me=e.exchange(value_for_him);

Demonstrate your use and prove (using assertions) that the
exchange has been made.

* You may use a condition and mutex in your solution (either pthread
or C++ based).
